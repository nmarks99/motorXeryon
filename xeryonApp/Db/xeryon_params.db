record(bo, "$(P)$(M):ReadParams") {
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))READ_PARAMS")
    field(SCAN, "$(SCAN=Passive)")
}

record(ai, "$(P)$(M):StatusBits") {
    field(DTYP, "asynInt32")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))STATUS_BITS")
    # field(ZRST, "Amplifiers enabled")
    # field(ONST, "End stop")
    # field(TWST, "Thermal protection 1")
    # field(THST, "Thermal protection 2")
    # field(FRST, "Force zero")
    # field(FVST, "Motor on")
    # field(SXST, "Closed loop")
    # field(SVST, "Encoder at index")
    # field(EIST, "Encoder valid")
    # field(NIST, "Searching index")
    # field(TEST, "Position reached")
    # field(ELST, "Error compensation")
}

record(longout, "$(P)$(M):Zone1") {
    field(DESC, "Width of zone 1")
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ZONE1")
}
record(longin, "$(P)$(M):Zone1RBV") {
    field(DESC, "Width of zone 1")
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ZONE1")
}

record(longout, "$(P)$(M):Zone2") {
    field(DESC, "Width of zone 2")
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ZONE2")
}
record(longin, "$(P)$(M):Zone2RBV") {
    field(DESC, "Width of zone 2")
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))ZONE2")
}

record(longout, "$(P)$(M):Freq1") {
    field(DESC, "Frequency in zone 1")
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))FREQUENCY1")
}
record(longin, "$(P)$(M):Freq1RBV") {
    field(DESC, "Frequency in zone 1")
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))FREQUENCY1")
}

record(longout, "$(P)$(M):Freq2") {
    field(DESC, "Frequency in zone 2")
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))FREQUENCY2")
}
record(longin, "$(P)$(M):Freq2RBV") {
    field(DESC, "Frequency in zone 2")
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))FREQUENCY2")
}

record(longout, "$(P)$(M):ControlFreq") {
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_FREQUENCY")
}
record(longin, "$(P)$(M):ControlFreqRBV") {
    field(DTYP, "asynInt32")
    field(EGU, "Hz")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_FREQUENCY")
}

record(longout, "$(P)$(M):ControlTimeout") {
    field(DTYP, "asynInt32")
    field(EGU, "ms")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_TIMEOUT")
}
record(longin, "$(P)$(M):ControlTimeoutRBV") {
    field(DTYP, "asynInt32")
    field(EGU, "ms")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_TIMEOUT")
}

record(longout, "$(P)$(M):ControlTimeout2") {
    field(DTYP, "asynInt32")
    field(EGU, "ms")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_TIMEOUT2")
}
record(longin, "$(P)$(M):ControlTimeout2RBV") {
    field(DTYP, "asynInt32")
    field(EGU, "ms")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))CONTROL_TIMEOUT2")
}

record(longout, "$(P)$(M):PosTolerance") {
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(DRVH, 65535)
    field(DRVL, 0)
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))POSITION_TOLERANCE")
}
record(longin, "$(P)$(M):PosToleranceRBV") {
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))POSITION_TOLERANCE")
}

record(longout, "$(P)$(M):PosTolerance2") {
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(DRVH, 65535)
    field(DRVL, 0)
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))POSITION_TOLERANCE2")
}
record(longin, "$(P)$(M):PosTolerance2RBV") {
    field(DTYP, "asynInt32")
    field(EGU, "counts")
    field(SCAN, "I/O Intr")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))POSITION_TOLERANCE2")
}
